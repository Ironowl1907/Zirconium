# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
PCH = src/zrpch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -Isrc/zirconium -Ivendor/glfw/include -Ivendor/glad/include -Ivendor/imgui -Ivendor/glm -Ivendor/stb_image -Ivendor/entt/src/entt -Ivendor/ImGuiFileDialog -Ivendor/yaml-cpp/include -Ivendor/shaderc/libshaderc/include -Ivendor/spirv-cross -Ivendor/Box2D/include -Ivendor/sol2/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -Lvendor/shaderc/libshaderc -Lvendor/spirv-cross -Lvendor/yaml-cpp/bin/Release -Lzirconium/vendor/lua/lua-5.4.7/install/lib -L/usr/lib64 -m64 -pthread
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug
TARGET = $(TARGETDIR)/libzirconium.a
OBJDIR = bin-int/Debug/zirconium
DEFINES += -DYAML_CPP_STATIC_DEFINE -DZIR_DEBUG -DZR_ENABLE_ASSERTS -DGLFW_INCLUDE_NONE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Og -fPIC -pthread -ggdb -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Og -fPIC -std=c++20 -pthread -ggdb -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
LIBS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Debug/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a -lshaderc-combined -lspirv-cross -lopengl32.lib -llua
LDDEPS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Debug/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a

else ifeq ($(config),release)
TARGETDIR = bin/Release
TARGET = $(TARGETDIR)/libzirconium.a
OBJDIR = bin-int/Release/zirconium
DEFINES += -DYAML_CPP_STATIC_DEFINE -DZIR_RELEASE -DZR_ENABLE_ASSERTS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -pthread -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++20 -pthread -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
LIBS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Release/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a -lshaderc-combined -lspirv-cross -lopengl32.lib -llua
LDDEPS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Release/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a

else ifeq ($(config),dist)
TARGETDIR = bin/Dist
TARGET = $(TARGETDIR)/libzirconium.a
OBJDIR = bin-int/Dist/zirconium
DEFINES += -DYAML_CPP_STATIC_DEFINE -DZIR_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -pthread -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++20 -pthread -Wall -Wextra -Werror -Wno-unused-parameter -Wno-delete-incomplete
LIBS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Dist/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a -lshaderc-combined -lspirv-cross -lopengl32.lib -llua
LDDEPS += vendor/glfw/bin/GLFW/libGLFW.a vendor/glad/bin/Glad/libGlad.a vendor/spdlog/bin/SpdLog/libSpdLog.a vendor/imgui/bin/ImGui/libImGui.a vendor/yaml-cpp/bin/Dist/libyaml-cpp.a vendor/Box2D/bin/Box2D/libBox2D.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/ApplicationEvent.o
GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/EditorCamera.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/FrameBuffer.o
GENERATED += $(OBJDIR)/ImGuiBuild.o
GENERATED += $(OBJDIR)/Instrumentor.o
GENERATED += $(OBJDIR)/Layer.o
GENERATED += $(OBJDIR)/LinuxPlatformUtils.o
GENERATED += $(OBJDIR)/OpenGLBuffer.o
GENERATED += $(OBJDIR)/OpenGLContext.o
GENERATED += $(OBJDIR)/OpenGLFramebuffer.o
GENERATED += $(OBJDIR)/OpenGLRendererAPI.o
GENERATED += $(OBJDIR)/OpenGLShader.o
GENERATED += $(OBJDIR)/OpenGLTexture.o
GENERATED += $(OBJDIR)/OpenGLUniformBuffer.o
GENERATED += $(OBJDIR)/OpenGLVertexArray.o
GENERATED += $(OBJDIR)/OrthoCameraController.o
GENERATED += $(OBJDIR)/OrthographicCamera.o
GENERATED += $(OBJDIR)/ProjectFile.o
GENERATED += $(OBJDIR)/RenderCommand.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Renderer2D.o
GENERATED += $(OBJDIR)/RendererAPI.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SceneCamera.o
GENERATED += $(OBJDIR)/SceneSerializer.o
GENERATED += $(OBJDIR)/ScriptSystem.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/StackLayer.o
GENERATED += $(OBJDIR)/SubTexture2D.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/UUID.o
GENERATED += $(OBJDIR)/UniformBuffer.o
GENERATED += $(OBJDIR)/VertexArray.o
GENERATED += $(OBJDIR)/imguiLayer.o
GENERATED += $(OBJDIR)/input.o
GENERATED += $(OBJDIR)/linux.o
GENERATED += $(OBJDIR)/linuxInput.o
GENERATED += $(OBJDIR)/log.o
GENERATED += $(OBJDIR)/stb_image.o
GENERATED += $(OBJDIR)/zrpch.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/ApplicationEvent.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/EditorCamera.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/FrameBuffer.o
OBJECTS += $(OBJDIR)/ImGuiBuild.o
OBJECTS += $(OBJDIR)/Instrumentor.o
OBJECTS += $(OBJDIR)/Layer.o
OBJECTS += $(OBJDIR)/LinuxPlatformUtils.o
OBJECTS += $(OBJDIR)/OpenGLBuffer.o
OBJECTS += $(OBJDIR)/OpenGLContext.o
OBJECTS += $(OBJDIR)/OpenGLFramebuffer.o
OBJECTS += $(OBJDIR)/OpenGLRendererAPI.o
OBJECTS += $(OBJDIR)/OpenGLShader.o
OBJECTS += $(OBJDIR)/OpenGLTexture.o
OBJECTS += $(OBJDIR)/OpenGLUniformBuffer.o
OBJECTS += $(OBJDIR)/OpenGLVertexArray.o
OBJECTS += $(OBJDIR)/OrthoCameraController.o
OBJECTS += $(OBJDIR)/OrthographicCamera.o
OBJECTS += $(OBJDIR)/ProjectFile.o
OBJECTS += $(OBJDIR)/RenderCommand.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Renderer2D.o
OBJECTS += $(OBJDIR)/RendererAPI.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SceneCamera.o
OBJECTS += $(OBJDIR)/SceneSerializer.o
OBJECTS += $(OBJDIR)/ScriptSystem.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/StackLayer.o
OBJECTS += $(OBJDIR)/SubTexture2D.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/UUID.o
OBJECTS += $(OBJDIR)/UniformBuffer.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/imguiLayer.o
OBJECTS += $(OBJDIR)/input.o
OBJECTS += $(OBJDIR)/linux.o
OBJECTS += $(OBJDIR)/linuxInput.o
OBJECTS += $(OBJDIR)/log.o
OBJECTS += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/zrpch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking zirconium
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning zirconium
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Application.o: src/zirconium/Core/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UUID.o: src/zirconium/Core/UUID.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/input.o: src/zirconium/Core/input.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/log.o: src/zirconium/Core/log/log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Instrumentor.o: src/zirconium/Debug/Instrumentor.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ApplicationEvent.o: src/zirconium/Events/ApplicationEvent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/zirconium/ImGui/ImGuiBuild.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imguiLayer.o: src/zirconium/ImGui/imguiLayer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/zirconium/Layers/Layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/StackLayer.o: src/zirconium/Layers/StackLayer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLBuffer.o: src/zirconium/Platform/OpenGL/OpenGLBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLContext.o: src/zirconium/Platform/OpenGL/OpenGLContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLFramebuffer.o: src/zirconium/Platform/OpenGL/OpenGLFramebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRendererAPI.o: src/zirconium/Platform/OpenGL/OpenGLRendererAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: src/zirconium/Platform/OpenGL/OpenGLShader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture.o: src/zirconium/Platform/OpenGL/OpenGLTexture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLUniformBuffer.o: src/zirconium/Platform/OpenGL/OpenGLUniformBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: src/zirconium/Platform/OpenGL/OpenGLVertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxPlatformUtils.o: src/zirconium/Platform/linux/LinuxPlatformUtils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/linux.o: src/zirconium/Platform/linux/linux.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/linuxInput.o: src/zirconium/Platform/linux/linuxInput.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ProjectFile.o: src/zirconium/Project/ProjectFile.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/zirconium/Renderer/Buffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EditorCamera.o: src/zirconium/Renderer/EditorCamera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameBuffer.o: src/zirconium/Renderer/FrameBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OrthoCameraController.o: src/zirconium/Renderer/OrthoCameraController.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OrthographicCamera.o: src/zirconium/Renderer/OrthographicCamera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: src/zirconium/Renderer/RenderCommand.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/zirconium/Renderer/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer2D.o: src/zirconium/Renderer/Renderer2D.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererAPI.o: src/zirconium/Renderer/RendererAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/zirconium/Renderer/Shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SubTexture2D.o: src/zirconium/Renderer/SubTexture2D.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/zirconium/Renderer/Texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UniformBuffer.o: src/zirconium/Renderer/UniformBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/zirconium/Renderer/VertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/zirconium/Scene/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/zirconium/Scene/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneCamera.o: src/zirconium/Scene/SceneCamera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneSerializer.o: src/zirconium/Scene/SceneSerializer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScriptSystem.o: src/zirconium/Scripting/ScriptSystem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zrpch.o: src/zrpch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: vendor/stb_image/stb_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif